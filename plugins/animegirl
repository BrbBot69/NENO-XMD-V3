const axios = require('axios');
const { lite } = require('../lite');

const CHANNEL_JID = '120363401225837204@newsletter';
const CHANNEL_NAME = '…¥·¥á…¥·¥è x·¥ç·¥Ö';

lite({
    pattern: "animegirl",
    desc: "Fetch a random anime girl image.",
    category: "anime",
    react: "üëß",
    filename: __filename
}, async (conn, mek, m, { from, reply }) => {
    try {
        const apiUrl = `https://api.waifu.pics/sfw/waifu`;
        const response = await axios.get(apiUrl);
        const data = response.data;

        await conn.sendMessage(from, {
            image: { url: data.url },
            caption: 'üë∏ *NENO XMD RANDOM ANIME GIRL IMAGES* üë∏\n\n\n *üß¨¬©NENO BY NIMESHKA*',
            contextInfo: {
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: CHANNEL_JID,
                    newsletterName: CHANNEL_NAME,
                    serverMessageId: 101
                }
            }
        }, { quoted: mek });

    } catch (e) {
        console.error(e);
        reply(`‚ùå Error fetching anime girl image: ${e.message}`);
    }
});

lite({
    pattern: "animegirl1",
    desc: "Fetch a random anime girl image.",
    category: "anime",
    react: "üëß",
    filename: __filename
}, async (conn, mek, m, { from, reply }) => {
    try {
        const apiUrl = `https://api.waifu.pics/sfw/waifu`;
        const response = await axios.get(apiUrl);
        const data = response.data;

        await conn.sendMessage(from, {
            image: { url: data.url },
            caption: 'üë∏ *NENO XMD RANDOM ANIME GIRL IMAGES* üë∏\n\n\n *üß¨¬©NENO BY NIMESHKA*',
            contextInfo: {
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: CHANNEL_JID,
                    newsletterName: CHANNEL_NAME,
                    serverMessageId: 102
                }
            }
        }, { quoted: mek });

    } catch (e) {
        console.error(e);
        reply(`‚ùå Error fetching anime girl image: ${e.message}`);
    }
});

// ‡∂î‡∂∫‡∑è‡∂ú‡∑ö original code ‡∂ë‡∂ö‡∑ö ‡∂Ö‡∂±‡∑ô‡∂ö‡∑ä commands (animegirl2, animegirl3, animegirl4, animegirl5) ‡∂í‡∂∏ pattern ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä copy ‡∂ö‡∂ª‡∂Ω‡∑è replace ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂¥‡∑î‡∑Ö‡∑î‡∑Ä‡∂±‡∑ä
