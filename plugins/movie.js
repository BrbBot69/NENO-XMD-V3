const axios = require('axios');
const { lite } = require('../lite');

// OMDB API Key
const OMDB_API_KEY = "76cb7f39"; // Replace with your own if needed

lite({
    pattern: "movie",
    desc: "Fetch detailed information about a movie.",
    category: "utility",
    react: "üé¨",
    filename: __filename
}, async (conn, mek, m, { args, reply, from }) => {
    try {
        const movieName = args.join(' ');
        if (!movieName) {
            return reply("üìΩÔ∏è Please provide the name of the movie.\nExample: .movie Inception");
        }

        const apiUrl = `http://www.omdbapi.com/?t=${encodeURIComponent(movieName)}&apikey=${OMDB_API_KEY}`;
        const response = await axios.get(apiUrl);
        const data = response.data;

        if (data.Response === "False") {
            return reply("‚ùå Movie not found.");
        }

        const movieInfo = `
*üé¨ ùó°ùóòùó°ùó¢ ùó´ùó†ùóó üé¨*

*·¥õ…™·¥õ ü·¥á:* ${data.Title}
* è·¥á·¥Ä Ä:* ${data.Year}
* Ä·¥Ä·¥õ·¥á·¥Ö:* ${data.Rated}
* Ä·¥á ü·¥á·¥ÄÍú±·¥á·¥Ö:* ${data.Released}
* Ä·¥ú…¥·¥õ…™·¥ç·¥á:* ${data.Runtime}
*…¢·¥á…¥ Ä·¥á:* ${data.Genre}
*·¥Ö…™ Ä·¥á·¥Ñ·¥õ·¥è Ä:* ${data.Director}
*·¥° Ä…™·¥õ·¥á Ä:* ${data.Writer}
*·¥Ä·¥Ñ·¥õ·¥è ÄÍú±:* ${data.Actors}
* ü·¥Ä…¥…¢·¥ú·¥Ä…¢·¥á:* ${data.Language}
*·¥Ñ·¥è·¥ú…¥·¥õ Ä è:* ${data.Country}
*·¥Ä·¥°·¥Ä Ä·¥ÖÍú±:* ${data.Awards}
*…™·¥ç·¥Ö ô  Ä·¥Ä·¥õ…™…¥…¢:* ${data.imdbRating}

> POWERED BY NIMESHKA MIHIRAN
`;

        // Safe check for poster
        const imageUrl = data.Poster && data.Poster !== 'N/A' ? data.Poster : null;

        if (imageUrl) {
            await conn.sendMessage(from, {
                image: { url: imageUrl },
                caption: movieInfo
            });
        } else {
            await reply(movieInfo);
        }

    } catch (e) {
        console.error('Movie command error:', e);
        reply(`‚ùå Error: ${e.message || e}`);
    }
});
